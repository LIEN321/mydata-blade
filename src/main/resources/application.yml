#服务器配置
server:
  port: 8001
  undertow:
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    buffer-size: 1024
    # 是否分配的直接内存
    direct-buffers: true
    # 线程配置
    threads:
      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
      io: 16
      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
      worker: 400
  servlet:
    # 编码配置
    encoding:
      charset: UTF-8
      force: true

#spring配置
spring:
  cache:
    ehcache:
      config: classpath:config/ehcache.xml
  servlet:
    multipart:
      max-file-size: 256MB
      max-request-size: 1024MB
  web:
    resources:
      add-mappings: false
  mvc:
    throw-exception-if-no-handler-found: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    mongodb:
      uri: mongodb://root:root@192.168.2.80:27017/admin


#配置日志地址
logging:
  config: classpath:log/logback_${blade.env}.xml

# mybatis
mybatis-plus:
  mapper-locations: classpath:org/springblade/**/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: org.springblade.**.entity
  #typeEnumsPackage: org.springblade.dashboard.entity.enums
  global-config:
    # 关闭MP3.0自带的banner
    banner: false
    db-config:
      #主键类型  0:"数据库ID自增", 1:"不操作", 2:"用户输入ID",3:"数字型snowflake", 4:"全局唯一ID UUID", 5:"字符串型snowflake";
      id-type: assign_id
      #字段策略
      insert-strategy: not_null
      update-strategy: not_null
      where-strategy: not_null
      #驼峰下划线转换
      table-underline: true
      # 逻辑删除配置
      # 逻辑删除全局值（1表示已删除，这也是Mybatis Plus的默认配置）
      logic-delete-value: 1
      # 逻辑未删除全局值（0表示未删除，这也是Mybatis Plus的默认配置）
      logic-not-delete-value: 0
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

#报表配置
report:
  enabled: false
  database:
    provider:
      prefix: blade-

#knife4j配置
knife4j:
  #启用
  enable: true
  #基础认证
  basic:
    enable: false
    username: blade
    password: blade
  #增强配置
  setting:
    enableSwaggerModels: true
    enableDocumentManage: true
    enableHost: false
    enableHostText: http://localhost
    enableRequestCache: true
    enableFilterMultipartApis: false
    enableFilterMultipartApiMethodType: POST
    language: zh_cn
    enableFooter: false
    enableFooterCustom: true
    footerCustomContent: Copyright © 2023 SpringBlade All Rights Reserved

#swagger配置信息
swagger:
  title: SpringBlade 接口文档系统
  description: SpringBlade 接口文档系统
  version: 3.7.0
  license: Powered By SpringBlade
  licenseUrl: https://bladex.cn
  terms-of-service-url: https://bladex.cn
  contact:
    name: smallchill
    email: smallchill@163.com
    url: https://gitee.com/smallc

#oss配置
oss:
  enabled: true
  name: qiniu
  tenant-mode: true
  endpoint: http://prt1thnw3.bkt.clouddn.com
  access-key: N_Loh1ngBqcJovwiAJqR91Ifj2vgOWHOf8AwBA_h
  secret-key: AuzuA1KHAbkIndCU0dB3Zfii2O3crHNODDmpxHRS
  bucket-name: blade

#第三方登陆配置
social:
  oauth:
    GITHUB:
      client-id: 233************
      client-secret: 233************************************
      redirect-uri: ${social.domain}/oauth/redirect/github
    GITEE:
      client-id: 233************
      client-secret: 233************************************
      redirect-uri: ${social.domain}/oauth/redirect/gitee
    WECHAT_OPEN:
      client-id: 233************
      client-secret: 233************************************
      redirect-uri: ${social.domain}/oauth/redirect/wechat
    QQ:
      client-id: 233************
      client-secret: 233************************************
      redirect-uri: ${social.domain}/oauth/redirect/qq
    DINGTALK:
      client-id: 233************
      client-secret: 233************************************
      redirect-uri: ${social.domain}/oauth/redirect/dingtalk


#blade配置
blade:
  token:
    #使用 @org.springblade.test.SignKeyGenerator 获取
    sign-key: 9hVSDlNv7zcKtry7UouMh2ApuFclyCIZ
    #使用 @org.springblade.test.AesKeyGenerator 获取
    aes-key: MQAiRur4ZakSNvCpSwakfETz9lh5wgkD
  xss:
    enabled: true
    skip-url:
      # 任务的过滤条件 包含大于、小于符号
      - /mydata-manage/task/submit
  secure:
    skip-url:
    client:
      - client-id: sword
        path-patterns:
          - /blade-sword/**
      - client-id: saber
        path-patterns:
          - /blade-saber/**
  tenant:
    column: tenant_id
    tables:
      - blade_notice
      - md_data
      - md_data_field
      - md_api
      - md_env
      - md_env_var
      - md_task
      - md_app
      - md_project

#mydata配置
mydata:
  mongodb:
    url: mongodb://root:root@192.168.2.80:27017/{}?authSource=admin&ssl=false
mail:
  # 邮件服务器的SMTP地址，可选，默认为smtp.<发件人邮箱后缀>
  host: 配置邮件服务器地址
  # 邮件服务器的SMTP端口，可选，默认25
  port: 配置邮件服务器端口
  # 发件人（必须正确，否则发送失败）
  from: 配置发件人邮箱
  # 用户名，默认为发件人邮箱前缀
  user: 配置邮箱账号
  # 密码（注意，某些邮箱需要为SMTP服务单独设置授权码，详情查看相关帮助）
  pass: 配置邮箱密码